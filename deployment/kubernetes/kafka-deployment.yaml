apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f apps.yaml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f apps.yaml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/kafka: "true"
        io.kompose.service: kafka
    spec:
      containers:
      - env:
        - name: ALLOW_PLAINTEXT_LISTENER
          value: yes
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: PLAINTEXT://messaging:9092
        - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
          value: CONTROLLER
        - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
          value: 1@messaging:9093
        - name: KAFKA_CFG_LISTENERS
          value: PLAINTEXT://:9092,CONTROLLER://:9093
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
        - name: KAFKA_CFG_PROCESS_ROLES
          value: broker,controller
        - name: KAFKA_ENABLE_KRAFT
          value: yes
        - name: KAFKA_KRAFT_CLUSTER_ID
          value: LelM2dIFQkiUFvXCEcqRWA
        image: bitnami/kafka:3.3.1
        imagePullPolicy: ""
        name: micro1-messaging
        ports:
        - containerPort: 9092
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/messaging/data
          name: kafka-claim0
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: kafka-claim0
        persistentVolumeClaim:
          claimName: kafka-claim0
status: {}
