version: '3.8'
name: 'microservice-rules-observability'
services:
  kafka:
    image: 'bitnami/kafka:3.3.1'
    container_name: micro1-messaging
    volumes:
      - ./messaging-cluster/messaging/data:/var/lib/messaging/data
    user: root
    ports:
      - "9092:9092"
    networks:
      - kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://messaging:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=LelM2dIFQkiUFvXCEcqRWA
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@messaging:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: micro1-rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./rabbitmq/data/:/var/lib/rabbitmq/
      - ./rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbitmq

  ot-collector:
    build:
      context: ./open-telemetry
      dockerfile: Dockerfile
    image: otel/opentelemetry-collector
    container_name: micro1-otel
    ports:
      - "4317:4317"
    environment:
      DEPLOY_ENV: local
    networks:
      - grafana

  orders:
    #image: maletq/micro1-work-order:latest
    build:
      context: ../../orders
      dockerfile: Dockerfile
    container_name: micro1-orders
    ports:
      - "8081:8081"
      - "8090:8090"
    networks:
      - kafka
      - grafana
      - rabbitmq
    links:
      - micro1-rules
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_URL=jdbc:postgresql://host.docker.internal:5432/drools?currentSchema=wo
      - DB_PASSWORD=wouser
      - DB_NAME=wouser
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=micro1-messaging:9092
      - GRPC_CLIENT_RULES-SERVICE_ADDRESS=static://rules:8090
      - GRPC_CLIENT_RULES-SERVICE_NEGOTIATION_TYPE=plaintext
      - GRPC_CLIENT_RULES-SERVICE_ENABLE_KEEP_ALIVE=true
      - GRPC_CLIENT_RULES-SERVICE_KEEP_ALIVE_WITHOUT_CALLS=true
      - MANAGEMENT_TRACING_ENABLED=true
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://tempo:9411
      - OTEL_TRACES_SAMPLER=always_on
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_SERVICE_NAME=ot-collector
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://ot-collector:4317
      - OTEL_PROPAGATORS=tracecontext,baggage,
    depends_on:
      - kafka
      - rules
    deploy:
      resources:
        limits:
          memory: 700m
    labels:
      logging: "promtail"

  simulator:
    #image: maletq/micro1-simulator:latest
    build:
      context: ../../simulator
      dockerfile: Dockerfile
    container_name: micro1-simulator
    ports:
      - "8082:8082"
    networks:
      - kafka
      - grafana
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=micro1-messaging:9092
      - MANAGEMENT_TRACING_ENABLED=true
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://tempo:9411
      - OTEL_TRACES_SAMPLER=always_on
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_SERVICE_NAME=ot-collector
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://ot-collector:4317
      - OTEL_PROPAGATORS=tracecontext,baggage,
    depends_on:
      - kafka
    deploy:
      resources:
        limits:
          memory: 700m
    labels:
      logging: "promtail"

  rules:
    #image: maletq/micro1-rules:latest
    build:
      context: ../../rules
      dockerfile: Dockerfile
    container_name: micro1-rules
    ports:
      - "8083:8083"
    networks:
      - grafana
      - rabbitmq
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_URL=jdbc:postgresql://host.docker.internal:5432/drools?currentSchema=ru
      - DB_PASSWORD=ruleuser
      - DB_NAME=ruleuser
      - GRPC_SERVER_PORT=8090
      - MANAGEMENT_TRACING_ENABLED=true
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://tempo:9411
      - OTEL_TRACES_SAMPLER=always_on
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_SERVICE_NAME=ot-collector
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://ot-collector:4317
      - OTEL_PROPAGATORS=tracecontext,baggage,
    deploy:
      resources:
        limits:
          memory: 700m
    labels:
      logging: "promtail"

networks:
  kafka:
  grafana:
  rabbitmq:
