name: Work Order Service
run-name: ${{ github.actor }}
on:
  push:
    paths:
      - work-order/**
    branches:
      - '**'
  pull_request:
    branches: [main]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      working-directory: ./work-order
      DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/micro1-work-order
    defaults:
      run:
        working-directory: ${{ env.working-directory }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      - name: Install protoc
        run: sudo apt-get install -y protobuf-compiler
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify -DforkCount=1 -DreuseForks=false org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=micro1-rules-observability -Dsonar.projectName='micro1-rules-observability'
#      - name: Build With Maven
#        run: mvn --batch-mode --update-snapshots verify -DforkCount=1 -DreuseForks=false
      - name: Build Docker Image
        if: github.ref == 'refs/heads/main' || github.base_ref == 'main'
        run: |
          echo "Building the Docker image..."
          docker build --no-cache -t ${{ secrets.DOCKER_HUB_USERNAME }}/micro1-work-order .
      - if: github.ref == 'refs/heads/main' || github.base_ref == 'main'
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - if: github.ref == 'refs/heads/main' || github.base_ref == 'main'
        name: Publish Docker Image
        run: |
          echo "Pushing the image $DOCKER_IMAGE_NAME to Docker Hub..."
          docker push $DOCKER_IMAGE_NAME
